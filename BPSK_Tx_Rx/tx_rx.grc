options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: pkt_tx_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bpsk
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 140.0]
    rotation: 0
    state: true
- name: bpsk_0
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: bpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 468.0]
    rotation: 0
    state: true
- name: excess_bw
  id: variable
  parameters:
    comment: ''
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 188.0]
    rotation: 0
    state: enabled
- name: excess_bw_0
  id: variable
  parameters:
    comment: ''
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 468.0]
    rotation: 0
    state: enabled
- name: order
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 532.0]
    rotation: 0
    state: enabled
- name: phase_bw
  id: variable
  parameters:
    comment: ''
    value: '0.0628'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 532.0]
    rotation: 0
    state: true
- name: rs_ratio
  id: variable
  parameters:
    comment: ''
    value: '1.040'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 124.0]
    rotation: 0
    state: true
- name: rs_ratio_0
  id: variable
  parameters:
    comment: ''
    value: '1.0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 468.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 36.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [344, 124.0]
    rotation: 0
    state: enabled
- name: sps_0
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 532.0]
    rotation: 0
    state: enabled
- name: thresh
  id: variable
  parameters:
    comment: ''
    value: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1016, 468.0]
    rotation: 0
    state: enabled
- name: usrp_rate
  id: variable
  parameters:
    comment: ''
    value: '768000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 188.0]
    rotation: 0
    state: true
- name: usrp_rate_0
  id: variable
  parameters:
    comment: ''
    value: '768000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 532.0]
    rotation: 0
    state: true
- name: variable_adaptive_algorithm_0
  id: variable_adaptive_algorithm
  parameters:
    comment: ''
    cons: bpsk
    delta: '10.0'
    ffactor: '0.99'
    modulus: sps
    step_size: '.0001'
    type: cma
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1416, 468.0]
    rotation: 0
    state: true
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: pkt
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1696, 1004.0]
    rotation: 0
    state: true
- name: blocks_message_debug_1
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 1480.0]
    rotation: 180
    state: true
- name: blocks_message_strobe_0
  id: blocks_message_strobe
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    msg: pmt.cons(pmt.PMT_NIL,pmt.init_u8vector(9,(71,78,85,32,82,97,100,105,111)))
    period: '500'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 268.0]
    rotation: 0
    state: enabled
- name: blocks_null_source_0
  id: blocks_null_source
  parameters:
    affinity: ''
    alias: ''
    bus_structure_source: '[[0,],]'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 160.0]
    rotation: 0
    state: true
- name: blocks_repack_bits_bb_1
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: ''
    endianness: gr.GR_MSB_FIRST
    k: '1'
    l: '8'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1176, 1372.0]
    rotation: 0
    state: true
- name: blocks_stream_mux_0
  id: blocks_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengths: (100,53*16)
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1336, 248.0]
    rotation: 0
    state: true
- name: blocks_tag_debug_0
  id: blocks_tag_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    display: 'True'
    filter: '""'
    name: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 908.0]
    rotation: 0
    state: true
- name: blocks_tagged_stream_align_0
  id: blocks_tagged_stream_align
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 972.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: bpsk
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 1060.0]
    rotation: 0
    state: true
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: bpsk
    differential: 'True'
    excess_bw: excess_bw
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 252.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_xx_ts_0
  id: digital_correlate_access_code_xx_ts
  parameters:
    access_code: '"11100001010110101110100010010011"'
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: packet_len
    threshold: thresh
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 1364.0]
    rotation: 0
    state: true
- name: digital_costas_loop_cc_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: order
    use_snr: 'False'
    w: phase_bw
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [888, 976.0]
    rotation: 0
    state: enabled
- name: digital_crc32_async_bb_0
  id: digital_crc32_async_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'True'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1464, 1476.0]
    rotation: 180
    state: enabled
- name: digital_crc32_async_bb_1
  id: digital_crc32_async_bb
  parameters:
    affinity: ''
    alias: ''
    check: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 276.0]
    rotation: 0
    state: enabled
- name: digital_diff_decoder_bb_0
  id: digital_diff_decoder_bb
  parameters:
    affinity: ''
    alias: ''
    coding: digital.DIFF_DIFFERENTIAL
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    modulus: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 1372.0]
    rotation: 0
    state: enabled
- name: digital_linear_equalizer_0
  id: digital_linear_equalizer
  parameters:
    adapt_after_training: 'True'
    affinity: ''
    alg: variable_adaptive_algorithm_0
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '15'
    sps: '1'
    training_sequence: '[ ]'
    training_start_tag: corr_est
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 976.0]
    rotation: 0
    state: disabled
- name: digital_map_bb_0
  id: digital_map_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    map: '[0,1]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 1380.0]
    rotation: 0
    state: true
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: digital.constellation_bpsk().base()
    damping: '1.0'
    loop_bw: phase_bw
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '128'
    osps: '1'
    pfb_mf_taps: '[]'
    resamp_type: digital.IR_MMSE_8TAP
    sps: sps
    ted_gain: '1.0'
    ted_type: digital.TED_MUELLER_AND_MULLER
    type: cc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [272, 996.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Block\n\"\"\"\n\nimport numpy as np\nfrom\
      \ gnuradio import gr\nimport pmt\n\nclass blk(gr.sync_block):\n    \"\"\"Packet\
      \ Format\"\"\"\n\n    def __init__(self):\n        gr.sync_block.__init__(self,\n\
      \            name = \"Packet Format\",\n            in_sig = None,\n       \
      \     out_sig = None)\n        self.message_port_register_in(pmt.intern('PDU_in'))\n\
      \        self.message_port_register_out(pmt.intern('PDU_out'))\n        self.set_msg_handler(pmt.intern('PDU_in'),\
      \ self.handle_msg)\n\n    def handle_msg(self, msg):\n        inMsg = pmt.to_python\
      \ (msg)\n        pld = inMsg[1]\n        # print (pld)\n        mLen = len(pld)\n\
      \        # print (mLen)\n        if (mLen > 0):\n            char_list = [85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,225,90,232,147]\n\
      \            char_list.append (mLen >> 8)\n            char_list.append (mLen\
      \ & 255)\n            char_list.append (mLen >> 8)\n            char_list.append\
      \ (mLen & 255)\n            char_list.extend (pld)\n            # print (char_list)\n\
      \            out_len = len(char_list)\n            # print (out_len)\n     \
      \       self.message_port_pub(pmt.intern('PDU_out'), pmt.cons(pmt.PMT_NIL,pmt.init_u8vector(out_len,(char_list))))\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Packet Format', 'blk', [], [('PDU_in', 'message', 1)], [('PDU_out',
      'message', 1)], 'Packet Format', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 280.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nclass\
      \ my_basic_adder_block(gr.basic_block):\n    def __init__(self,tag_name = 'packet_len'):\n\
      \        gr.basic_block.__init__(self,\n                                name=\"\
      Tagged Stream Cropper\",\n                                in_sig  = [np.complex64],\n\
      \                                out_sig = [np.complex64])\n\n        self.previous_tag_n_remainder\
      \ = 0\n        self.tag_name                 = tag_name\n        self.set_tag_propagation_policy(gr.TPP_DONT)\n\
      \n\n    def general_work(self, input_items, output_items):\n        len_out\
      \ = len(output_items[0])\n\n        # DO PROCESSING\n        out_produced =\
      \ 0 # output produced \n\n        #-> Write the remaining data of the previous\
      \ tag\n        if self.previous_tag_n_remainder > 0: \n            if self.previous_tag_n_remainder\
      \ < len_out: # if the length of the input items is sufficient to write the remainder\
      \ of the previous tag items \n                output_items[0][:self.previous_tag_n_remainder]\
      \ = input_items[0][:self.previous_tag_n_remainder] #write to output \n     \
      \           out_produced                                   += self.previous_tag_n_remainder\
      \                  #inccrease the number of item produced\n                self.previous_tag_n_remainder\
      \ = 0                                                                #reset\
      \ the counter \n                # the RETURN is at the end of the work()\n\n\
      \            else: # self.previous_tag_n_remainder >= len_out\n            \
      \    output_items[0][:len_out]      = input_items[0][:len_out]\n           \
      \     self.previous_tag_n_remainder -= len_out\n                self.consume(0,\
      \ len_out)\n                return len_out\n\n        # READ TAGS AND PARSE\
      \ THE RECEIVED STREAM\n        tags = self.get_tags_in_window(0, out_produced,\
      \ len_out)\n\n        #if there exist tag\n        if len(tags) > 0:\n     \
      \       #for each tag apply\n            for tag in tags:\n                tag_name\
      \   = pmt.to_python(tag.key)            # packet_tag\n                tag_len\
      \    = pmt.to_python(tag.value)          # packet_len\n                tag_pos\
      \    = tag.offset - self.nitems_read(0)  # packet_position_index\n         \
      \       if tag_name == self.tag_name:       #check if the tag name is appropriate\n\
      \                    if tag_pos + tag_len < len_out: # if all the elements correspding\
      \ to the \"tag\" are included in the input_items\n\n                       \
      \ # write the elements to the output\n                        output_items[0][out_produced:(out_produced+tag_len)]\
      \ = input_items[0][tag_pos:(tag_pos+tag_len)]\n\n                        # add\
      \ tag to the corresponding start point                     \n              \
      \          self.add_item_tag(0,                                   # Write to\
      \ output port 0\n                                         self.nitems_written(0)+out_produced,\
      \  # Index of the tag in absolute terms\n                                  \
      \       tag.key,                              # Key of the tag\n           \
      \                              tag.value                             # Value\
      \ of the tag\n                                         )\n                 \
      \       #increase the number of output element produced counter\n          \
      \              out_produced += tag_len\n\n                    else: #tag_pos+tag_len\
      \ >= len_out:\n                        n_item_to_wrt = len_out - tag_pos\n \
      \                       output_items[0][out_produced:(out_produced + n_item_to_wrt)]\
      \ = input_items[0][tag_pos:(tag_pos+n_item_to_wrt)]\n\n                    \
      \    self.add_item_tag(0,                                     # Write to output\
      \ port 0\n                                          self.nitems_written(0)+out_produced,\
      \   # Index of the tag in absolute terms\n                                 \
      \         tag.key,                               # Key of the tag\n        \
      \                                  tag.value                              #\
      \ Value of the tag\n                                          )\n\n        \
      \                self.previous_tag_n_remainder = tag_len - n_item_to_wrt\n \
      \                       out_produced                 += n_item_to_wrt\n    \
      \                    self.consume(0,len_out)\n                        return\
      \ out_produced\n\n        #if there is no tag exits\n        self.consume(0,len_out)\n\
      \n        #recall that the first \"if\" state is producing element!\n      \
      \  return out_produced"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag_name: '"packet_len"'
  states:
    _io_cache: ('Tagged Stream Cropper', 'my_basic_adder_block', [('tag_name', "'packet_len'")],
      [('0', 'complex', 1)], [('0', 'complex', 1)], '', ['tag_name'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1488, 972.0]
    rotation: 0
    state: enabled
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: 'The CMA equalizer has been

      replaced by a Linear Equalizer

      and an Adaptive Algorithm for

      version 3.9'
    note: CMA equalizer replaced
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 476.0]
    rotation: 0
    state: true
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 276.0]
    rotation: 0
    state: true
- name: pdu_tagged_stream_to_pdu_0
  id: pdu_tagged_stream_to_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408, 1380.0]
    rotation: 0
    state: true
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: '0'
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'False'
    type: complex
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 624.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: tx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 268.0]
    rotation: 0
    state: true
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: rx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 516.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: rx2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1480, 1060.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: tx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 516.0]
    rotation: 0
    state: true
- name: virtual_source_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: rx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 1052.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: rx2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 1380.0]
    rotation: 0
    state: true

connections:
- [blocks_message_strobe_0, strobe, digital_crc32_async_bb_1, in]
- [blocks_null_source_0, '0', blocks_stream_mux_0, '0']
- [blocks_repack_bits_bb_1, '0', pdu_tagged_stream_to_pdu_0, '0']
- [blocks_stream_mux_0, '0', virtual_sink_0, '0']
- [blocks_tagged_stream_align_0, '0', epy_block_1, '0']
- [digital_constellation_decoder_cb_0, '0', virtual_sink_1, '0']
- [digital_constellation_modulator_0, '0', blocks_stream_mux_0, '1']
- [digital_correlate_access_code_xx_ts_0, '0', blocks_repack_bits_bb_1, '0']
- [digital_costas_loop_cc_0, '0', blocks_tag_debug_0, '0']
- [digital_costas_loop_cc_0, '0', blocks_tagged_stream_align_0, '0']
- [digital_costas_loop_cc_0, '0', digital_constellation_decoder_cb_0, '0']
- [digital_crc32_async_bb_0, out, blocks_message_debug_1, print]
- [digital_crc32_async_bb_1, out, epy_block_0, PDU_in]
- [digital_diff_decoder_bb_0, '0', digital_map_bb_0, '0']
- [digital_linear_equalizer_0, '0', digital_costas_loop_cc_0, '0']
- [digital_map_bb_0, '0', digital_correlate_access_code_xx_ts_0, '0']
- [digital_symbol_sync_xx_0, '0', digital_costas_loop_cc_0, '0']
- [digital_symbol_sync_xx_0, '0', digital_linear_equalizer_0, '0']
- [epy_block_0, PDU_out, pdu_pdu_to_tagged_stream_0, pdus]
- [epy_block_1, '0', blocks_file_sink_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', digital_constellation_modulator_0, '0']
- [pdu_tagged_stream_to_pdu_0, pdus, digital_crc32_async_bb_0, in]
- [virtual_source_0, '0', qtgui_sink_x_0, '0']
- [virtual_source_0, '0', virtual_sink_0_0, '0']
- [virtual_source_0_0, '0', digital_symbol_sync_xx_0, '0']
- [virtual_source_1, '0', digital_diff_decoder_bb_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.2.0
