options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: zero_forcing_simul
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: H
  id: variable
  parameters:
    comment: ''
    value: '[[1+2j, 1+9j]]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 92.0]
    rotation: 0
    state: true
- name: QPSK
  id: variable_constellation
  parameters:
    comment: ''
    const_points: '[-1-1j, -1+1j, 1+1j, 1-1j]'
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 3, 2]'
    type: qpsk
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 836.0]
    rotation: 0
    state: disabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 36.0]
    rotation: 0
    state: enabled
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 380.0]
    rotation: 0
    state: true
- name: analog_random_uniform_source_x_0
  id: analog_random_uniform_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maximum: '3'
    maxoutbuf: '0'
    minimum: '0'
    minoutbuf: '0'
    seed: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [104, 732.0]
    rotation: 0
    state: disabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [120, 188.0]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 304.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: dumpOUT
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 300.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_1
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: dumpIN
    type: complex
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 228.0]
    rotation: 0
    state: true
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 352.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: H[0][0]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 284.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_1
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: H[0][1]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 340.0]
    rotation: 0
    state: enabled
- name: blocks_null_sink_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 472.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 504.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0_0_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 584.0]
    rotation: 0
    state: true
- name: blocks_null_sink_0_0_0_0
  id: blocks_null_sink
  parameters:
    affinity: ''
    alias: ''
    bus_structure_sink: '[[0,],]'
    comment: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 616.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 324.0]
    rotation: 0
    state: true
- name: blocks_vector_source_x_0
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'False'
    tags: '[]'
    type: complex
    vector: '[1] * 500'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 548.0]
    rotation: 0
    state: disabled
- name: digital_constellation_modulator_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: QPSK
    differential: 'True'
    excess_bw: '0.35'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: '2'
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 724.0]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    H: H
    _source_code: "\"\"\"\nZERO FORCING\n\"\"\"\n\nimport numpy as np\nfrom gnuradio\
      \ import gr\nimport math\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    def __init__(self, H=[[1,\
      \ 0]]):  # only default arguments here\n        gr.sync_block.__init__(\n  \
      \          self,\n            name='ZF precoder',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[np.complex64, np.complex64]\n\
      \        )\n        self.H = H\n        self.F = np.linalg.pinv(self.H) * (1/math.sqrt(2))\n\
      \        print(\"ZF precoder : \" ,self.F)\n\n    def work(self, input_items,\
      \ output_items):\n        x = [np.transpose(input_items[0])]\n        x_precoded\
      \ = np.matmul(self.F, x)\n        \n        output_items[0][:] = x_precoded[0]\n\
      \        output_items[1][:] = x_precoded[1]\n\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('ZF precoder', 'blk', [('H', '[[1, 0]]')], [('0', 'complex', 1)],
      [('0', 'complex', 1), ('1', 'complex', 1)], '', ['H'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 312.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nDBS\n\"\"\"\n\nimport numpy as np\nfrom gnuradio import\
      \ gr\nimport math\n\nclass blk(gr.sync_block):  # other base classes are basic_block,\
      \ decim_block, interp_block\n    \"\"\"Embedded Python Block example - a simple\
      \ multiply const\"\"\"\n\n    def __init__(self, angle=0.0):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='DBS precoder',   # will show up in GRC\n            in_sig=[np.complex64],\n\
      \            out_sig=[np.complex64, np.complex64]\n        )\n        # if an\
      \ attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n        self.angle = angle  # [-90\
      \ -> 90]\n        self.F = np.transpose([np.exp(-1j*math.pi*math.sin(angle*math.pi/180)*np.arange(1,2+1))])\
      \ * (1/math.sqrt(2))\n        print(\"DBS precoder : \" ,self.F)\n\n    def\
      \ work(self, input_items, output_items):\n\n        x = [np.transpose(input_items[0])]\n\
      \        x_precoded = np.matmul(self.F, x)\n        \n        output_items[0][:]\
      \ = x_precoded[0]\n        output_items[1][:] = x_precoded[1]\n\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    angle: '0'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('DBS precoder', 'blk', [('angle', '0.0')], [('0', 'complex', 1)],
      [('0', 'complex', 1), ('1', 'complex', 1)], 'Embedded Python Block example -
      a simple multiply const', ['angle'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 472.0]
    rotation: 0
    state: true
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nDBS\n\"\"\"\n\nimport numpy as np\nfrom gnuradio import\
      \ gr\nimport math\n\nclass blk(gr.sync_block):  # other base classes are basic_block,\
      \ decim_block, interp_block\n    \"\"\"Embedded Python Block example - a simple\
      \ multiply const\"\"\"\n\n    def __init__(self, angle=0.0):  # only default\
      \ arguments here\n        \"\"\"arguments to this function show up as parameters\
      \ in GRC\"\"\"\n        gr.sync_block.__init__(\n            self,\n       \
      \     name='No precoder',   # will show up in GRC\n            in_sig=[np.complex64],\n\
      \            out_sig=[np.complex64, np.complex64]\n        )\n        # if an\
      \ attribute with the same name as a parameter is found,\n        # a callback\
      \ is registered (properties work, too).\n        self.F = np.transpose([np.ones((1,2))])\
      \ * (1/math.sqrt(2))\n        print(\"no precoder : \" ,self.F)\n\n    def work(self,\
      \ input_items, output_items):\n        \n        x = [np.transpose(input_items[0])]\n\
      \        x_precoded = np.matmul(self.F, x)\n        \n        output_items[0][:]\
      \ = x_precoded[0]\n        output_items[1][:] = x_precoded[1]\n\n        return\
      \ len(output_items[0])\n"
    affinity: ''
    alias: ''
    angle: '0'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('No precoder', 'blk', [('angle', '0.0')], [('0', 'complex', 1)], [('0',
      'complex', 1), ('1', 'complex', 1)], 'Embedded Python Block example - a simple
      multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 584.0]
    rotation: 0
    state: true

connections:
- [analog_const_source_x_0, '0', blocks_float_to_complex_0, '1']
- [analog_random_uniform_source_x_0, '0', digital_constellation_modulator_0, '0']
- [analog_sig_source_x_0, '0', blocks_float_to_complex_0, '0']
- [blocks_add_xx_0, '0', blocks_file_sink_0, '0']
- [blocks_float_to_complex_0, '0', blocks_file_sink_1, '0']
- [blocks_float_to_complex_0, '0', blocks_throttle_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_xx_0, '0']
- [blocks_multiply_const_vxx_1, '0', blocks_add_xx_0, '1']
- [blocks_throttle_0, '0', epy_block_0, '0']
- [blocks_throttle_0, '0', epy_block_1, '0']
- [blocks_throttle_0, '0', epy_block_1_0, '0']
- [blocks_vector_source_x_0, '0', blocks_file_sink_1, '0']
- [blocks_vector_source_x_0, '0', blocks_throttle_0, '0']
- [digital_constellation_modulator_0, '0', blocks_file_sink_1, '0']
- [digital_constellation_modulator_0, '0', blocks_throttle_0, '0']
- [epy_block_0, '0', blocks_multiply_const_vxx_0, '0']
- [epy_block_0, '1', blocks_multiply_const_vxx_1, '0']
- [epy_block_1, '0', blocks_null_sink_0, '0']
- [epy_block_1, '1', blocks_null_sink_0_0, '0']
- [epy_block_1_0, '0', blocks_null_sink_0_0_0, '0']
- [epy_block_1_0, '1', blocks_null_sink_0_0_0_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.2.0
